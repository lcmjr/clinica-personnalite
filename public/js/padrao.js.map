{"version":3,"sources":["visible.js","padrao.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"padrao.js","sourcesContent":["(function($) {\r\n    /**\r\n     * Copyright 2012, Digital Fusion\r\n     * Licensed under the MIT license.\r\n     * http://teamdf.com/jquery-plugins/license/\r\n     *\r\n     * @author Sam Sehnert\r\n     * @desc A small plugin that checks whether elements are within\r\n     *     the user visible viewport of a web browser.\r\n     *     only accounts for vertical position, not horizontal.\r\n     */\r\n\r\n    $.fn.visible = function(partial) {\r\n\r\n        var $t            = $(this),\r\n            $w            = $(window),\r\n            viewTop       = $w.scrollTop(),\r\n            viewBottom    = viewTop + $w.height(),\r\n            _top          = $t.offset().top,\r\n            _bottom       = _top + $t.height(),\r\n            compareTop    = partial === true ? _bottom : _top,\r\n            compareBottom = partial === true ? _top : _bottom;\r\n\r\n        return ((compareBottom <= viewBottom) && (compareTop >= viewTop));\r\n\r\n    };\r\n\r\n})(jQuery);","/**\r\n * Created by luizm on 19/07/2016.\r\n */\r\n$(window).ready(function(){\r\n    $(\"#btn-menu-rpsv\").click(function () {\r\n        if($(this).hasClass(\"is-active\")){\r\n            $(this).removeClass(\"is-active\");\r\n            $(\"#menu-principal\").slideUp(500);\r\n        }else {\r\n            $(this).addClass(\"is-active\");\r\n            $(\"#menu-principal\").slideDown(500);\r\n        }\r\n    });\r\n    $(this).scroll();\r\n}).scroll(function(){\r\n    $(\".animate-in\").each(function(i, el) {\r\n        var el = $(el);\r\n        if (el.visible(true)) {\r\n            el.addClass(\"animate-start\");\r\n        }\r\n    });\r\n});\r\nfunction remove_class(classe){\r\n    $(\".\"+classe).removeClass(classe);\r\n}\r\nvar newsletter_field = [\"nome-news\",\"email-news\"];\r\nvar newsletter_field_names = [\"Nome\",\"Email\"];\r\nfunction enviar_news(){\r\n    if(check_input_filled(newsletter_field,newsletter_field_names,\"msg-result-news\")) {\r\n        box_ajax_response(\"msg-result-news\", \"Enviando a mensagem...\", \"info\");\r\n        $.ajax({\r\n            headers: {\r\n                'X-CSRF-Token': $('#form-newsletter input[name=\"_token\"]').val()\r\n            },\r\n            type: 'POST',\r\n            url: \"newsletter\",\r\n            data: $('#form-newsletter').serialize(),\r\n            success: function (data) {\r\n                $('#form-newsletter input').val(\"\");\r\n                box_ajax_response(\"msg-result-news\", \"Mensagem enviada com sucesso, obrigado pelo contato!\", \"success\");\r\n            },\r\n            error: function (erro) {\r\n                box_ajax_response(\"msg-result-news\", \"Ocorreu um erro no envio!\", \"danger\");\r\n            }\r\n        });\r\n    }\r\n    return false;\r\n}\r\nfunction check_input_filled(inputs,inputs_names,id_warning_box){\r\n    for(i = 0;i<inputs.length;i++){\r\n        if($(\"#\"+inputs[i]).val()== \"\"){\r\n            box_ajax_response(id_warning_box,\"Preencha o campo \"+inputs_names[i],\"danger\");\r\n            return false\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction box_ajax_response(id,msg,class_bootstrap){\r\n    $(\"#\"+id).hide({duration:200,\r\n        msg:msg,\r\n        class_bootstrap:class_bootstrap,\r\n        complete:function(event) {\r\n            $(this).html(msg).attr(\"class\", \"alert alert-\" + class_bootstrap).show(200);\r\n        }});\r\n}"],"sourceRoot":"/source/"}